version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: library_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: library_user
      POSTGRES_PASSWORD: library_pass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library_user -d library_db -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - library_network

  # Go Application
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: library_api
    restart: unless-stopped
    environment:
      PORT: 8080
      DATABASE_URL: postgres://library_user:library_pass@db:5432/library_db?sslmode=disable
      ENVIRONMENT: production
      LOG_LEVEL: info
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - library_network

volumes:
  postgres_data:
    driver: local

networks:
  library_network:
    driver: bridge